@page "/counter"
@rendermode InteractiveServer
@inject Blazored.LocalStorage.ILocalStorageService localStorage;
@inject IJSRuntime JS;


<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;
    private bool hasLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !hasLoaded)
        {
            hasLoaded = true;

            if (await localStorage.ContainKeyAsync("count"))
            {
                currentCount = await localStorage.GetItemAsync<int>("count");
                StateHasChanged(); // Needed to update the UI after JS interop
            }
        }
    }

    private async Task IncrementCount()
    {
        currentCount++;
        await localStorage.SetItemAsync("count", currentCount);
    }
}
